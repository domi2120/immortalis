apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "immortalis.fullnamemigrator" . }}
  labels:
    {{- include "immortalis.labels" . | nindent 4 }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    helm.sh/hook: post-install, post-upgrade
    helm.sh/hook-weight: "5"
    helm.sh/hook-delete-policy: before-hook-creation, hook-succeeded
spec:
  activeDeadlineSeconds: 120
  backoffLimit: 0
  template:
    metadata:
      name: {{ include "immortalis.fullnamemigrator" . }}
      labels: 
        {{- include "immortalis.labels" . | nindent 10 }}
    spec:
      restartPolicy: "Never"
      serviceAccountName: {{ include "immortalis.fullnamemigrator" . }}
      containers:
        - name: migrator
          image: "{{ .Values.common.image.repository }}:{{ .Values.common.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.common.image.pullPolicy }}
          env:
            - name: DATABASE_URL
              value: "postgres://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@immortalis-postgresql/{{ .Values.postgresql.auth.database }}"  # replace localhost with db if running in container
            - name: FILE_STORAGE_LOCATION
              value: "/downloads/"
            - name: TEMP_FILE_STORAGE_LOCATION
              value: "/temp-downloads/"
            - name: SIMULATE_DOWNLOAD
              value: "false"
            - name: SIMULATED_DOWNLOAD_DURATION_SECONDS
              value: "0"
            - name: ARCHIVER_THREAD_COUNT
              value: "1"
            - name: ARCHIVER_ARCHIVING_TIMEOUT_SECONDS
              value: "6000"
            - name: ARCHIVER_ERROR_BACKOFF_SECONDS
              value: "600"
            - name: TRACKER_THREAD_COUNT
              value: "1"
            - name: USE_IPV6
              value: "false"